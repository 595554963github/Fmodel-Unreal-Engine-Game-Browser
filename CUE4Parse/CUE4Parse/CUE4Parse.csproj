<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <NeutralLanguage>en</NeutralLanguage>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <TargetFramework>net9.0</TargetFramework>
    <IsPublishable>false</IsPublishable>
    <Platforms>AnyCPU</Platforms>
    <Description>C# Parser for Unreal Engine packages &amp; assets</Description>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <Version>1.2.2</Version>
    <Configuration Condition=" '$(Configuration)' == '' ">Release</Configuration>
  </PropertyGroup>

  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Blake3" Version="2.0.0" />
    <PackageReference Include="BouncyCastle.Cryptography" Version="2.6.1" />
    <PackageReference Include="Infrablack.UE4Config" Version="0.7.2.97" />
    <PackageReference Include="GenericReader" Version="2.2.4" />
    <PackageReference Include="LZMA-SDK" Version="22.1.1" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="OffiUtils" Version="2.0.1" />
    <PackageReference Include="Oodle.NET" Version="2.1.0" />
    <PackageReference Include="Serilog" Version="4.3.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
    <PackageReference Include="K4os.Compression.LZ4.Streams" Version="1.3.8" />
    <PackageReference Include="Zlib-ng.NET" Version="1.1.1" />
    <PackageReference Include="ZstdSharp.Port" Version="0.8.5" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="Resources\ACE7Key.bin" />
    <EmbeddedResource Include="Resources\ACE7Key.bin" />
    <None Remove="Resources\PUBGNameHashMap.json" />
    <EmbeddedResource Include="Resources\PUBGNameHashMap.json" />
  </ItemGroup>

  <PropertyGroup>
    <BuildInParallel>false</BuildInParallel>
    <CMakeProject>../CUE4Parse-Natives/</CMakeProject>
    <CMakeBuildDir>$(CMakeProject)builddir</CMakeBuildDir>
  </PropertyGroup>

  <Target Name="Build-Natives" BeforeTargets="BeforeBuild" AfterTargets="AfterBuild">
    <MakeDir Directories="$(CMakeBuildDir)" Condition="!Exists('$(CMakeBuildDir)')" />
    <Exec Command="cmake .." ConsoleToMSBuild="true" WorkingDirectory="$(CMakeBuildDir)" IgnoreExitCode="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
      <Output TaskParameter="ExitCode" PropertyName="CMakeExitCode" />
    </Exec>
    <Exec Condition=" '$(CMakeExitCode)' == '0' " Command="cmake --build . --config Release --target install" ConsoleToMSBuild="true" WorkingDirectory="$(CMakeBuildDir)">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
      <Output TaskParameter="ExitCode" PropertyName="CMakeExitCode" />
    </Exec>
    <Message Condition=" '$(CMakeExitCode)' != '0' " Importance="high" Text="CUE4Parse-Natives build failed. Continuing without it. ERROR: '$(OutputOfExec)'" />
    <ItemGroup Condition=" '$(CMakeExitCode)' == '0' ">
      <Content Include="..\CUE4Parse-Natives\bin\Release\CUE4Parse-Natives.dll" Condition=" '$(OS)' == 'Windows_NT' ">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <PackagePath>lib/$(TargetFramework)</PackagePath>
        <PackageCopyToOutput>true</PackageCopyToOutput>
      </Content>
      <Content Include="$(CMakeBuildDir)/CUE4Parse-Natives.so" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' ">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <PackagePath>lib/$(TargetFramework)</PackagePath>
        <PackageCopyToOutput>true</PackageCopyToOutput>
      </Content>
      <Content Include="$(CMakeBuildDir)/CUE4Parse-Natives.dylib" Condition=" '$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' ">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <PackagePath>lib/$(TargetFramework)</PackagePath>
        <PackageCopyToOutput>true</PackageCopyToOutput>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="CleanCMakeProj" BeforeTargets="BeforeClean">
    <RemoveDir Directories="$(CMakeBuildDir);$(CMakeProject)bin/">
      <Output TaskParameter="RemovedDirectories" ItemName="DeletedList" />
    </RemoveDir>
    <Message Text="Deleted directories: '@(DeletedList)'" />
  </Target>
</Project>